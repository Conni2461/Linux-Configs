#!/bin/bash

# define the filename to use as output
motd="/etc/motd"

# Clear motd
true > $motd

# 10-hostname
figlet -k -f slant "$(hostname)" >> $motd

# 20-sysinfo
# get load averages
IFS=" " read LOAD1 LOAD5 LOAD15 <<<$(/bin/cat /proc/loadavg | awk '{ print $1,$2,$3 }')
# get free memory
IFS=" " read USED FREE TOTAL <<<$(free -htm | grep "Mem" | awk {'print $3,$4,$2'})
# get processes
PROCESS=$(ps -eo user=|sort|uniq -c | awk '{ print $2 " " $1 }')
PROCESS_ALL=$(echo "$PROCESS"| awk {'print $2'} | awk '{ SUM += $1} END { print SUM }')
PROCESS_ROOT=$(echo "$PROCESS"| grep root | awk {'print $2'})
PROCESS_USER=$(echo "$PROCESS"| grep -v root | awk {'print $2'} | awk '{ SUM += $1} END { print SUM }')

W="\e[0;39m"
G="\e[1;32m"

echo -e "
${W}system info:
$W  Distro......: $W`cat /etc/*release | grep "PRETTY_NAME" | cut -d "=" -f 2- | sed 's/"//g'`
$W  Kernel......: $W`uname -sr`

$W  Uptime......: $W`uptime -p`
$W  Load........: $G$LOAD1$W (1m), $G$LOAD5$W (5m), $G$LOAD15$W (15m)
$W  Processes...:$W $G$PROCESS_ROOT$W (root), $G$PROCESS_USER$W (user) | $G$PROCESS_ALL$W (total)

$W  CPU.........: $W`cat /proc/cpuinfo | grep "model name" | cut -d ' ' -f3- | awk {'print $0'} | head -1`
$W  Memory......: $G$USED$W used, $G$FREE$W free, $G$TOTAL$W in total$W" >> $motd

# 30-hdd-free
mountpoints=('/')
barWidth=50
maxDiscUsage=90
clear="\e[39m\e[0m"
dim="\e[2m"
barclear=""
echo >> $motd

for point in "${mountpoints[@]}"; do
    line=$(df -hl "${point}")
    usagePercent=$(echo "$line"|tail -n1|awk '{print $5;}'|sed 's/%//')
    usedBarWidth=$(((usagePercent*barWidth)/100))
    barContent=""
    color="\e[32m"
    if [ "${usagePercent}" -ge "${maxDiscUsage}" ]; then
        color="\e[31m"
    fi
    barContent="${color}"
    for sep in $(seq 1 $usedBarWidth); do
        barContent="${barContent}|"
    done
    barContent="${barContent}${clear}${dim}"
    for sep in $(seq 1 $((barWidth-usedBarWidth))); do
        barContent="${barContent}-"
    done
    bar="[${barContent}${clear}]"
    echo "${line}" | awk  '{if ($1 != "Filesystem") printf("%-30s%+3s used out of %+5s\n", $1, $3, $2); }' | sed -e 's/^/  /' >> $motd
    echo -e "${bar}" | sed -e 's/^/  /' >> $motd
done

# 40-services
# set column width
COLUMNS=3
# colors
green="\e[1;32m"
red="\e[1;31m"
undim="\e[0m"
services=( "cronie" "dbus" "docker" "fail2ban" "sshd" "openvpn"  )
# sort services
IFS=$'\n' services=($(sort <<<"${services[*]}"))
unset IFS

service_status=()
# get status of all services
for service in "${services[@]}"; do
    service_status+=($(systemctl is-active "$service"))
done

for i in ${!services[@]}; do
    # color green if service is active, else red
    if [[ "${service_status[$i]}" == "active" ]]; then
        out+="${services[$i]}:,${green}${service_status[$i]}${undim},"
    else
        out+="${services[$i]}:,${red}${service_status[$i]}${undim},"
    fi
    # insert \n every $COLUMNS column
    if [ $((($i+1) % $COLUMNS)) -eq 0 ]; then
        out+="\n"
    fi
done
out+="\n"

printf "\nservices:\n" >> $motd
printf "$out" | column -ts $',' | sed -e 's/^/  /' >> $motd

# 60-docker
# set column width
COLUMNS=2
# colors
green="\e[1;32m"
red="\e[1;31m"
undim="\e[0m"

mapfile -t containers < <(docker ps -a | sed  's/([[:digit:]]*)//' | awk '{ print $11,$7 }' | sed '/^\s*$/d' | tail -n +2)

IFS=$'\n' containers=($(sort <<<"${containers[*]}"))
unset IFS

out=""
for i in "${!containers[@]}"; do
    IFS=" " read name status <<< ${containers[i]}
    # color green if service is active, else red
    if [[ "${status}" == "Up" ]]; then
        out+="${name}:,${green}${status,,}${undim},"
    else
        out+="${name}:,${red}${status,,}${undim},"
    fi
    # insert \n every $COLUMNS column
    if [ $((($i+1) % $COLUMNS)) -eq 0 ]; then
        out+="\n"
    fi
done
out+="\n"

printf "\nDocker status:\n" >> $motd
printf "$out" | column -ts $',' | sed -e 's/^/  /' >> $motd
