#!/bin/sh
# This script will compile or run another finishing operation on a document or project.
#
# Compiles .tex. groff (.mom, .ms), .rmd, .md, make and cmake projects(with build directory).
# Opens .sent files as sent presentations.
# Runs scripts based on extention or shebang

make_build()
{
	if [ -f Makefile ] || [ -f makefile ]; then
		make -j && exit 0
		read
		exit 1
	fi
}

cmake_build()
{
	if [ -d build ]; then
		cd build || exit
		if [ -f Makefile ] || [ -f makefile ]; then
			make -j && exit 0
		elif [ -f build.ninja ]; then
			ninja && exit 0
		fi
		read
		exit 1
	fi
}

file=$(readlink -f "$1")
dir=$(dirname "$file")
base="${file%.*}"

make_build
cmake_build

cd "$dir" || exit

make_build
cmake_build

textype() { \
	command="pdflatex"
	( sed 5q "$file" | grep -i -q 'xelatex' ) && command="xelatex"
	$command --output-directory="$dir" "$base" &&
	grep -i addbibresource "$file" >/dev/null &&
	biber --input-directory "$dir" "$base" &&
	$command --output-directory="$dir" "$base" &&
	$command --output-directory="$dir" "$base"
}

case "$file" in
	*\.ms) refer -PS -e "$file" | groff -me -ms -kejpt -T pdf > "$base".pdf ;;
	*\.mom) refer -PS -e "$file" | groff -mom -kejpt -T pdf > "$base".pdf ;;
	*\.rmd) echo "require(rmarkdown); render('$file')" | R -q --vanilla ;;
	*\.tex) textype "$file" ;;
	*\.md) pandoc "$file" --pdf-engine=xelatex -o "$base".pdf ;;
	*config.h) sudo make install ;;
	*\.c) cc "$file" -o "$base" && "$base" ;;
	*\.cpp) c++ "$file" -o "$base" && "$base" ;;
	*\.py) python "$file" ;;
	*\.r) Rscript "$file" ;;
	*\.go) go run "$file" ;;
	*\.lua) lua "$file" ;;
	*\.sent) setsid sent "$file" 2>/dev/null & ;;
	*) sed 1q "$file" | grep "^#!/" | sed "s/^#!//" | xargs -r -I % "$file" ;;
esac
